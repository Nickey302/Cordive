/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { MeshPhysicalMaterial } from 'three'

export function Model(props) {
  const { nodes, materials } = useGLTF('/assets/Models/ObstractObject.glb')
  
  // 4E7FA0 / 48546D / 3c7475 / 426363

  // 커스텀 재질 생성
  const glassMaterials = {
    Red: new MeshPhysicalMaterial({
      color: '#4E7FA0',
      clearcoat: 1,
      clearcoatRoughness: 0,
      transmission: 0.5,
      thickness: 0.5,
      roughness: 0,
    }),
    Green: new MeshPhysicalMaterial({
      color: '#48546D',
      clearcoat: 1,
      clearcoatRoughness: 0,
      transmission: 0.5,
      thickness: 0.5,
      roughness: 0,
    }),
    Blue: new MeshPhysicalMaterial({
      color: '#3c7475',
      clearcoat: 1,
      clearcoatRoughness: 0,
      transmission: 0.5,
      thickness: 0.5,
      roughness: 0,
    }),
    Yellow: new MeshPhysicalMaterial({
      color: '#426363',
      clearcoat: 1,
      clearcoatRoughness: 0,
      transmission: 0.5,
      thickness: 0.5,
      roughness: 0,
    }),
  }

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder.geometry}
        material={materials.Metal}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder001.geometry}
        material={materials.Metal}
        position={[0, 3.211, 0]}
        rotation={[-Math.PI, 0, -Math.PI / 2]}
        scale={[-0.23, -3.683, -0.229]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder002.geometry}
        material={materials.Metal}
        position={[0, 2.294, 0]}
        rotation={[Math.PI, -0.791, -Math.PI / 2]}
        scale={[-0.23, -3.683, -0.229]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder003.geometry}
            material={materials.Metal}
        position={[0, 2.294, 0]}
        rotation={[Math.PI, -0.791, -Math.PI / 2]}
        scale={[-0.23, -3.683, -0.229]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder004.geometry}
        material={materials.Metal}
        position={[-2.244, 2.227, 2.465]}
        rotation={[-0.382, -0.697, 1.011]}
        scale={[-0.23, -1.112, -0.229]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder005.geometry}
        material={glassMaterials.Red}
        position={[-3.635, 3.25, -0.171]}
        rotation={[2.675, 0.542, -0.986]}
        scale={[-1.088, -0.071, -1.088]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder006.geometry}
        material={glassMaterials.Green}
        position={[3.83, 3.271, -0.043]}
        rotation={[-1.38, -0.421, -1.674]}
        scale={[-1.088, -0.071, -1.088]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder007.geometry}
        material={glassMaterials.Blue}
        position={[2.68, 2.32, -2.743]}
        rotation={[-0.995, -0.688, -0.147]}
        scale={[-1.088, -0.071, -1.088]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cylinder008.geometry}
        material={glassMaterials.Yellow}
        position={[-1.49, 1.944, 3.475]}
        rotation={[-0.999, -1.096, 0.884]}
        scale={[-1.088, -0.071, -1.088]}
      />
    </group>
  )
}

useGLTF.preload('/assets/Models/ObstractObject.glb')
